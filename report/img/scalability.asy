import graph;

// picture pic;
real m = 4;
real xsize=160*m, ysize=90*m;
int p;

scale(Log,Log);
size(xsize,ysize,IgnoreAspect);

/***********************************************************************/
////////////////////////////////////// block_STL
real[] p1 = {1,1.3358843537415,2.57963875205255,4.87888198757764,8.67955801104972,12.6693548387097,13.2016806722689,13.2016806722689};
pair[] f1 = {(0,0.),(0,0.),(0,0.),(0,0),(0,0),(0,0),(0,0)};
for(int i=0, p=1; i<8; ++i, p *= 2) f1[i] = (p, p1[i]);
draw(graph(f1),"block\_stl", marker(scale(1.5mm)*polygon(3),grey,FillDraw(gray(0.7)),above=false));

////////////////////////////////////// block_FF
real[] p2 = {1,1.34136546184739,2.34880450070323,4.18546365914787,6.62698412698413,8.78947368421053,8.30845771144279,7.19827586206897};
pair[] f2 = {(0,0.),(0,0.),(0,0.),(0,0),(0,0),(0,0),(0,0)};
for(int i=0, p=1; i<8; ++i, p *= 2) f2[i] = (p, p2[i]);
draw(graph(f2),"block\_ff", marker(scale(1.5mm)*polygon(4),grey,FillDraw(gray(0.7)),above=false));

////////////////////////////////////// block_OMP
real[] p3 = {1,1.33019674935843,2.5873544093178,4.71212121212121,8.68715083798883,12.8512396694215,13.2905982905983,13.2905982905983};
pair[] f3 = {(0,0.),(0,0.),(0,0.),(0,0),(0,0),(0,0),(0,0)};
for(int i=0, p=1; i<8; ++i, p *= 2) f3[i] = (p, p3[i]);

draw(graph(f3),"block\_omp", marker(scale(1.5mm)*polygon(5),grey,FillDraw(gray(0.7)),above=false));

////////////////////////////////////// block_CILK
real[] p4 = {1,1.32427843803056,2.50401284109149,2.88354898336414,3.22981366459627,4.54810495626822,5.45454545454545,6.90265486725664};
pair[] f4 = {(0,0.),(0,0.),(0,0.),(0,0),(0,0),(0,0),(0,0)};
for(int i=0, p=1; i<8; ++i, p *= 2) f4[i] = (p, p4[i]);

draw(graph(f4),"block\_cilk", marker(scale(1.5mm)*polygon(6),grey,FillDraw(gray(0.7)),above=false));
//////////////////////////////////////

/***********************************************************************/
////////////////////////////////////// circuit_STL
real[] p5 = {1,1.90637119113573,3.67366548042705,6.64713457823567,10.8548895899054,15.6172465960666,17.3787878787879,14.2780082987552};
pair[] f5 = {(0,0.),(0,0.),(0,0.),(0,0),(0,0),(0,0),(0,0)};
for(int i=0, p=1; i<8; ++i, p *= 2) f5[i] = (p, p5[i]);
draw(graph(f5),"circuit\_stl", marker(scale(1.5mm)*polygon(3),grey,FillDraw(gray(0)),above=false));

////////////////////////////////////// circuit_FF
real[] p6 = {1,1.90637119113573,3.67366548042705,6.64713457823567,10.8548895899054,15.6172465960666,17.3787878787879,14.2780082987552};
pair[] f6 = {(0,0.),(0,0.),(0,0.),(0,0),(0,0),(0,0),(0,0)};
for(int i=0, p=1; i<8; ++i, p *= 2) f6[i] = (p, p6[i]);
draw(graph(f6),"circuit\_ff", marker(scale(1.5mm)*polygon(4),grey,FillDraw(gray(0)),above=false));

////////////////////////////////////// circuit_OMP
real[] p7 = {1,1.9283849309959,3.58157256667821,6.82959048877147,11.6049382716049,17.9513888888889,20.1559454191033,21.2757201646091};
pair[] f7 = {(0,0.),(0,0.),(0,0.),(0,0),(0,0),(0,0),(0,0)};
for(int i=0, p=1; i<8; ++i, p *= 2) f7[i] = (p, p7[i]);

draw(graph(f7),"circuit\_omp", marker(scale(1.5mm)*polygon(5),grey,FillDraw(gray(0)),above=false));

////////////////////////////////////// circuit_CILK
real[] p8 = {1,1.92765185856754,3.75123500352858,6.19161327897496,8.01734539969834,12.5810650887574,17.2301458670989,18.0799319727891};
pair[] f8 = {(0,0.),(0,0.),(0,0.),(0,0),(0,0),(0,0),(0,0)};
for(int i=0, p=1; i<8; ++i, p *= 2) f8[i] = (p, p8[i]);

draw(graph(f8),"circuit\_cilk", marker(scale(1.5mm)*polygon(6),grey,FillDraw(gray(0)),above=false));
//////////////////////////////////////
pair[] ideal = {(0,0.),(0,0.),(0,0.),(0,0),(0,0), (0,0)};
for(int i=0, p=1; i<6; ++i, p *= 2) ideal[i] = (p, p);
draw(graph(ideal),"ideal", marker(scale(1.5mm)*polygon(100),grey,FillDraw(gray(0.9)),above=false));
//////////////////////////////////////


scale(Log,Log);
xaxis("p",BottomTop,LeftTicks(DefaultFormat,new real[] {1, 2, 4, 8, 16, 32, 64, 128}));

scale(Log,Log);

yaxis("$scalab(p)$",LeftRight,RightTicks(DefaultFormat, new real[] { 1, 2, 4, 8, 16, 32} ));

add(currentpicture, legend(),point(NW),10E+10S,UnFill);

// Fit pic to W of origin:
scale(Log,Log);


